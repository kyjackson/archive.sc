<%- include("partials/header.ejs") %>

<div class="container px-0 py-3">

    <!-- Jumbotron card containing search bar -->
    <div class="p-4 mb-4 text-white bg-dark rounded-3">
        <div class="p-4 container-fluid" id="search">
            <form id="searchWindow">
                <h1 class="display-6 fw">Enter Query</h1>
                <p class="small">Simply enter a word or phrase in the search bar below to find all occurrences among the videos uploaded to the Star Citizen Youtube channel.</p>

                <div class="row justify-content-center align-items-center">
                    <div class="col-6 my-4">
                        <input type="text" class="form-control text-center" id="searchBar" name="query" placeholder="Search...">
                    </div>   
                </div>

                <div class="row justify-content-center align-items-center">
                    <div class="col-2">
                        <span>Published:</span>
                    </div>

                    <div class="col-2">
                        <span>Duration:</span>
                    </div>

                    <div class="col-2">
                        <span>Order By:</span>
                    </div>
                </div>

                <div class="row justify-content-center align-items-center">
                    <div class="col-2">
                        <select id="publishDate" class="form-select text-center" aria-label="Default select example">
                            <option value="" selected>Any time</option>
                            <option value="2022">2022</option>
                            <option value="2021">2021</option>
                            <option value="2020">2020</option>
                            <option value="2019">2019</option>
                            <option value="2018">2018</option>
                            <option value="2017">2017</option>
                            <option value="2016">2016</option>
                            <option value="2015">2015</option>
                            <option value="2014">2014</option>
                            <option value="2013">2013</option>
                            <option value="2012">2012</option>
                        </select>
                    </div>

                    <div class="col-2">
                        <select id="duration" class="form-select text-center" aria-label="Default select example">
                            <option value="" selected>Any duration</option>
                            <option value="1">> 60 min</option>
                            <option value="2">30 - 60 min</option>
                            <option value="3">15 - 30 min</option>
                            <option value="3">< 15 min</option>
                        </select>
                    </div>

                    <div class="col-2">
                        <select id="orderBy" class="form-select text-center" aria-label="Default select example">
                            <option value="" selected>Default</option>
                            <option value="videoPublishDate">Date</option>
                            <option value="videoViewCount">Views</option>
                            <option value="videoLikeCount">Likes</option>
                        </select>
                    </div> 
                </div>

                <div class="row justify-content-center align-items-center">
                    <div class="col-2 mt-4 form-check">
                        <input id="order" class="form-check-input mx-0" type="checkbox" value="DESC" disabled>
                        <label class="form-check-label" for="order">Descending</label>
                    </div>
                </div>

                <button id="searchButton" class="btn btn-light btn-lg mt-4" type="submit">
                    Search Archive
                    <span id="loadingIcon" class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>
                </button>
            </form>

            <!-- Search results get displayed inside this div -->
            <div id="results" class="pt-4 d-flex flex-column justify-content-center"></div>

        </div>
    </div>

    <!-- Cards containing purpose statement and search stats -->
    <div class="row align-items-md-stretch">
        
        <!-- Purpose statement card -->
        <div class="col-md-6 mb-4">
            <div class="h-100 p-5 justify-content-left text-white bg-dark rounded-3">
                <h2>Purpose</h2>
                <p class="text-start">At the time of writing this, there are over 1500 videos uploaded to the Star Citizen YouTube channel, ranging anywhere from 30 seconds to over an hour in length. When discussing the game, people will often bring up something mentioned in one or more videos uploaded years ago. With multiple weekly uploads over the years, so much has been spoken by CIG that people wanting to provide sources for their claims will have an exceedingly difficult time doing so if they don't know the particular video.</p>

                <p class="text-start">With the help of YouTube's auto-generated captions, this changes. This site allows anyone to search a database of all videos on the Star Citizen channel and their associated captions to quickly find the info they're searching for. Full transcriptions of each video are provided, along with timestamps for search terms that have a match. Searching for any mention of future plans, bespoke, or ships that punch above their weight class should now take minutes, not hours, of combing through videos. Additionally, search stats and video stats will soon be provided so anyone can see what the community has been most interested in.</p>
                
            </div>
        </div>

        <!-- Search stats card -->
        <div class="col-md-6 mb-4">
            <div class="h-100 p-5 text-white bg-dark rounded-3">
                <h2>Caveats</h2>
                <p class="text-start">1. <i>Captions are not always accurate.</i></p>
                <p class="ps-5 text-start">
                    Due to the captions being auto-generated, they are not always accurate. What can be heard in a video will sometimes be transcribed as something unexpected by Google's caption transcription algorithm. This tends to occur more often in older videos.
                </p>

                <p class="text-start">2. <i>Not all searches are conclusive.</i></p>
                <p class="ps-5 text-start">
                    Sometimes, a certain word or phrase can be broken up in one video's caption track and not in another. This can cause similar search terms to unexpectedly return different results (e.g., "multicrew" and "multi crew" return different results), and in some cases one term might return results while a similar term returns none. If either of these occur, try rephrasing your search to use a different keyword, or to be less specific.
                </p>

                <p class="text-start">3. <i>Auto-generated captions only have English localization.</i></p>
                <p class="ps-5 text-start">
                    Unfortunately, auto-generated captions are not available in languages other than English. If you are interested in volunteering to transcribe caption tracks for another language, contact me and I'll consider all options for adding them to the starchives.
                </p>
            </div>
        </div>

    </div>

</div>

<script> // todo: page numbers for results

    // first set up Youtube Iframe API
    let tag = document.createElement('script');
    tag.src = "https://www.youtube.com/iframe_api";
    let firstScriptTag = document.getElementsByTagName('script')[0];
    firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

    // wait for Iframe API to be ready before searching
    function onYouTubeIframeAPIReady() {
        console.log("Iframe ready.");
        return;
    }

    $("#loadingIcon").hide();
    //$("#results").hide();

    /**
     * Allow "Descending" filter only when a column order is specified.
     */
    $("#orderBy").on("change", function(event) {
        if ($("#orderBy").val()) {
            $("#order").removeAttr("disabled");
        } else {
            $("#order").prop("checked", false);
            $("#order").attr("disabled", "disabled");
        }
    });

    /**
     * Send a GET request to our own API endpoint for retrieving relevant captions from our database.
     */
    $("form").on("submit", function(event) {
        event.preventDefault();

        // disable search button to prevent additional queries while loading
        $("#searchButton").attr("disabled", "disabled");
        $("#results").empty();

        let keyword = $("#searchBar").val();
        let videoPublishDate = $("#publishDate").val();
        let videoDuration = $("#duration").val();
        let orderResultsBy = $("#orderBy").val();
        let orderResults = "";
        if ($("#order").prop("checked")) {
            orderResults = $("#order").val();
        }
        


        if (keyword.length == 0) {
            $("#searchButton").removeAttr("disabled");
            console.log("error: no query");

        } else {
            
            $("#loadingIcon").show();
            $("#loadingIcon").css("visibility", "visible");
            $("#results").show();
            

            //let url = `${window.location}results`;
            //console.log(window.location.origin);
            $.ajax({
                method: "GET",
                url: `${window.location.origin}/results`,
                dataType: 'json',
                data: {
                    query: keyword,
                    date: videoPublishDate,
                    duration: videoDuration,
                    orderBy: orderResultsBy,
                    order: orderResults
                },
                error: function(jqXHR, textStatus, errorThrown) {
                    if (errorThrown == "timeout") {
                        $("#loadingIcon").hide();
                        $("#loadingIcon").css("visibility", "hidden");
                        $("#results").show();
                    }

                    $("#results").html(`
                        <p class="mx-auto justify-content-center text-start">Search timed out. Try making your query longer or more specific. If the search keeps timing out, the site may be experiencing heavy traffic.</p>
                    `);
                },
                timeout: 15000
            })
            .done(function (result) {
                $("#loadingIcon").hide();
                $("#loadingIcon").css("visibility", "hidden");
                $("#results").show();
                $("#searchButton").removeAttr("disabled");

                

                // get amount of video results
                let total = 0;
                for (let i = 0; i < result.length; i++) {
                    for (let j = 0; j < result[i].length; j++) {
                        total++;
                    }
                }

                if (total >= 100) {
                    $("#results").html(`<p class="mx-auto justify-content-center text-start">Found ${total} or more videos containing "${keyword}"</p>`);
                } else {
                    $("#results").html(`<p class="mx-auto justify-content-center text-start">Found ${total} videos containing "${keyword}"</p>`);
                }
                

                if (result.length > 0) {
                    
                    // display page navigation bar
                    let page = 0;

                    $("#results").append(`

                        <div class="mx-auto justify-content-end">
                        <nav aria-label="page-navigation">
                            <ul class="pagination">
                                <li class="page-item">
                                    <button id="previousPage" class="page-link" onclick="this.blur();" aria-label="Previous">
                                        <span aria-hidden="true">&laquo;</span>
                                    </button>
                                </li>

                                <li class="page-item">
                                    <span id="currentPage" class="page-link">${page+1} of ${result.length}</span>
                                </li>

                                <li class="page-item">
                                    <button id="nextPage" class="page-link" onclick="this.blur();" aria-label="Next">
                                        <span aria-hidden="true">&raquo;</span>
                                    </button>
                                </li>
                            </ul>
                        </nav>
                        </div>

                        <div class="mx-auto w-75 accordion accordion-flush" id="resultsAccordion"></div>
                    `);

                    
                    let pageMap = new Map();
                    result.forEach(function (page, index) {
                        //console.log(index);
                        pageMap.set(index, page);
                    });
                    
                    // always display the first page first
                    $("#previousPage").prop("disabled");
                    showPage(pageMap.get(page));
                    //console.log(pageMap.get(0));

                    // set up result page navigation
                    $("#previousPage").on("click", function() {
                        //console.log("clicked");
                        if (page > 0) {
                            page--;
                            $("#currentPage").html(`${page+1} of ${result.length}`);
                            showPage(pageMap.get(page));

                            if (page === 0) {
                                $("#previousPage").prop("disabled");
                            }

                            if (page < result.length && $("#nextPage").attr("disabled")) {
                                $("#nextPage").removeProp("disabled");
                            }
                        }
                    });

                    $("#nextPage").on("click", function() {
                        //console.log("clicked");
                        if (page < result.length-1) {
                            page++;
                            $("#currentPage").html(`${page+1} of ${result.length}`);
                            showPage(pageMap.get(page));

                            if (page === result.length) {
                                $(this).prop("disabled");
                            }

                            if (page > 0 && $("#previousPage").attr("disabled")) {
                                $("#nextPage").removeProp("disabled");
                            }
                        }
                    });

                } 

                console.log(result);
            });

        }

        // display all the videos for a specified page
        function showPage(page) {
            $("#resultsAccordion").empty();

            for (let video in page) {

                let captions = JSON.parse(page[video].captionTrack);
                let timestamps = new Map();

                // make videoPublishDate human-readable in ISO 8601 format
                let publishDate = page[video].videoPublishDate.slice(0, 10);
                //console.log(publishDate);

                // get every occurance of the search phrase in the caption track
                // NOTE: includes() is case sensitive, so convert captions and query to lowercase first
                captions.forEach(function(segment, index) {
                    if (segment.text.toLowerCase().includes(keyword.toLowerCase())) {
                        let longSegment = segment.text;
                        
                        if (captions[index-1] !== undefined) {
                            longSegment = `${captions[index-1].text} - ${longSegment}`;
                        }
                        if (captions[index+1] !== undefined) {
                            longSegment = `${longSegment} - ${captions[index+1].text}`;
                        }

                        // convert seconds to hr:min:sec
                        // let hr = Math.floor(segment.start / 3600);
                        // let min = Math.floor((segment.start % 3600)/ 60);
                        // let sec = Math.floor(segment.start - (min * 60));

                        // let hrPadded = ('00'+hr).slice(-2);
                        // let minPadded = ('00'+min).slice(-2);
                        // let secPadded = ('00'+sec).slice(-2);

                        //timestamps.set(segment.start, segment.text);
                        timestamps.set(segment.start-3, longSegment);
                    }
                });

                // append accordion items with all relevant video info
                $("#resultsAccordion").append(`
                    <div class="bg-dark pt-3 accordion-item" id="${page[video].videoId}">

                        <h2 class="accordion-header" id="header-${page[video].videoId}">
                            <button class="bg-dark bg-gradient text-white accordion-button collapsed d-flex" type="button" data-bs-toggle="collapse" data-bs-target="#collapse-${page[video].videoId}" aria-expanded="false" aria-controls="collapse-${page[video].videoId}">
                                <div class="accordion-header-text flex-grow-1">
                                    ${page[video].videoTitle}
                                </div>

                                <div class="accordion-header-text">
                                    ${publishDate}
                                </div>
                            </button>
                        </h2>

                        <div id="collapse-${page[video].videoId}" class="bg-secondary accordion-collapse collapse" aria-labelledby="header-${page[video].videoId}">
                            <div id="body-${page[video].videoId}" class="bg-dark accordion-body">
                                <div id="player-${page[video].videoId}"></div>
                                <div id="timestamps-${page[video].videoId}" class="d-flex flex-column "></div>
                            </div>
                        </div>

                    </div>
                `);

                // create the iframe for each video
                let player = new YT.Player(`player-${page[video].videoId}`, {
                    height: '480',
                    width: '720',
                    videoId: page[video].videoId,
                    host: 'https://www.youtube.com'
                });

                // append timestamp links to each accordion item
                timestamps.forEach(function (value, key) {
                    let time = format(key);

                    $(`#timestamps-${page[video].videoId}`).append(`

                        <br>
                        <div class="pt-3 d-flex justify-content-left text-start">
                            <a href="#header-${page[video].videoId}" id="play-${key}-${page[video].videoId}">${time}</a>
                            <span>&nbsp;-&nbsp;</span>
                            <p>"...${value}..."</p>
                        </div>
                    
                    `);
                    
                    $(`a[id*='${key}']`).on("click", function () {
                        player.seekTo(key, true);
                        player.playVideo();
                    });
                    
                });
            }
        }

        
        
    });

    // helper function for converting time in seconds to time in hh:mm:ss
    // reference: https://stackoverflow.com/questions/3733227/javascript-seconds-to-minutes-and-seconds
    function format(seconds) {   
        var hr = Math.floor(seconds / 3600);
        var min = Math.floor((seconds % 3600) / 60);
        var sec = Math.floor(seconds % 60);

        // format result depending on amount of each time component
        var result = "";
        if (hr > 0) {
            result += "" + hr + ":" + (min < 10 ? "0" : "");
        }
        result += "" + min + ":" + (sec < 10 ? "0" : "");
        result += "" + sec;
        return result;
    }

</script>

<%- include("partials/footer.ejs") %>